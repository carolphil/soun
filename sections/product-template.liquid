<div data-section-id="{{ section.id }}" data-section-type="product" id="ProductSection-{{ section.id }}" data-enable-history-state="true" data-collections-related="/collections/{{collection.handle}}?view=related">
    <div class="product product-detail">
        
        {%- assign current_variant = product.selected_or_first_available_variant -%}
        {% assign variantCount = product.variants | size %}
        <div class="row product_top{% if section.settings.show_tab == 'horizontal'%} horizontal-tabs{% else %} vertical-tabs has-sticky-product-img{% endif %}">
            <div class="col-md-6 product-photos" data-more-view-product>
                <div {% if section.settings.show_tab == 'vertical' %} data-sticky-product-img{% endif %} class="product-img-box{% if section.settings.style_moreview == 'horizontal' %} horizontal-moreview{% else %}  left-vertical-moreview vertical-moreview{% endif %}{% if settings.product_image_border%} grid-item-border{% endif %}">
                    <div style="position: relative;" class="wrapper-images">
                        <div class="product-photo-container slider-for">
                            {% for media in product.media %}
                            {% case media.media_type %}
                            {% when 'image' %}
                            <div class="thumb thum-image filter-{{ media.alt | handle }}">
                                <a data-zoom class="fancybox" rel="gallery1" href="{{ media | img_url: 'original' }}" data-fancybox="images">
                                    <img id="product-featured-image-{{media.id}}" src="{{ media | img_url: 'original' }}" alt="{{ media.alt | escape }}"
                                        class="lazyload"
                                        data-src="{{ media | img_url: 'original' }}"
                                        data-widths="[180, 360, 540, 720, 900, 1080, 1296, 1512, 1728, 2048]"
                                        data-aspectratio="{{ media | img_url: 'original' }}"
                                        data-sizes="auto">
                                </a>
                            </div>
                            {% when 'external_video' %}
                            <div class="thumb filter-{{ media.alt | handle }}">
                              <div class="product-single__media" style="padding-top: 100%" data-media-id="{{ media.id }}">
                                {{ media | external_video_tag }}
                              </div>
                            </div>
                            {% when 'model' %}
                            <div class="thum">
                              <div class="product-single__media model-viewer-click" style="padding-top: 100%" data-media-id="{{ media.id }}">
                                {{ media | model_viewer_tag: image_size: '500x', 
                                reveal: 'interaction', 
                                toggleable: true, 
                                data-model-id: media.id, 
                                auto-rotate: true,
                                id: 'paused-change-demo'
                                }}
                              </div>
                              <div class="shopify-model-viewer-ui__controls-overlay">
                                <div class="shopify-model-viewer-ui__button shopify-model-viewer-ui__button--poster" aria-label="Play 3D Viewer">
                                  <svg viewBox="0 0 60 60" id="threed-icon-button-control"><path fill="none" d="M0 0h60v60H0z"></path><path fill="currentColor" d="M40.4 22.57l-8.8-5.14a3.19 3.19 0 00-3.21 0l-8.8 5.14A3.24 3.24 0 0018 25.36v10.28a3.23 3.23 0 001.6 2.79l8.8 5.14a3.2 3.2 0 003.21 0l8.8-5.14A3.23 3.23 0 0042 35.64V25.36a3.24 3.24 0 00-1.6-2.79zM20.6 36.7a1.23 1.23 0 01-.6-1.06V25.36a1.23 1.23 0 01.6-1.06l8.8-5.14a1.19 1.19 0 011.19 0l8.8 5.14a1.2 1.2 0 01.36.34l-9.51 4.89a2.23 2.23 0 00-1.25 2V41.6z"></path></svg>
                                </div>
                              </div>
                            </div>
                            
                            {% else %}
                            <div class="thumb filter-{{ media.alt | handle }}">
                              <div class="product-single__media" data-media-id="{{ media.id }}">
                                {{ media | media_tag }}
                              </div>
                            </div>
                            {% endcase %}
                            {% endfor %}
                        </div>

                        {% if product.metafields.c_f['Product Video'] %}
                        {% render 'video-product' %}
                        {% endif %}
                    </div>

                    <div class="slider-nav" data-rows="5" data-vertical="{% if section.settings.style_moreview == 'horizontal' %}false{% else %}true{% endif %}">
                        {% for media in product.media %}
                        {% case media.media_type %}
                        {% when 'image' %}
                        <div class="item filter-{{ media.alt | handle }}">
                            <a href="javascript:void(0)" data-image="{{ media.src | product_img_url: 'original' }}" data-zoom-image="{{ media.src | product_img_url: 'original' }}">
                                <img src="{{ media.src | product_img_url: 'compact' }}" alt="{{ media.alt | escape }}">
                            </a>
                        </div>
                        {% when 'external_video' %}
                          <div class="item">
                            <div class="product-single__media" data-media-id="{{ media.id }}">
                              <img id="product-featured-image-{{image.id}}" class="product-single__thumbnail-image" src="https://img.youtube.com/vi/{{ media | external_video_tag | split: 'embed/' | last | split: '?' | first }}/0.jpg" alt="{{ media.alt }}">
                              <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"viewBox="0 0 494.148 494.148" xml:space="preserve"><g><g><path d="M405.284,201.188L130.804,13.28C118.128,4.596,105.356,0,94.74,0C74.216,0,61.52,16.472,61.52,44.044v406.124 c0,27.54,12.68,43.98,33.156,43.98c10.632,0,23.2-4.6,35.904-13.308l274.608-187.904c17.66-12.104,27.44-28.392,27.44-45.884 C432.632,229.572,422.964,213.288,405.284,201.188z"/></g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg>

                            </div>
                          </div>
                          {% when 'video' %}
                          <div class="item">
                            <div class="product-single__media" data-media-id="{{ media.id }}">
                               <img src="{{ media | media_tag | split: 'img src="' | last | split: '">' | first }}" />
                            </div>
                          </div>
                          {% when 'model' %}
                          <div class="item">
                            <div class="product-single__media" data-media-id="{{ media.id }}">
                              {{ media | model_viewer_tag: image_size: image_size, 
                              reveal: 'interaction', 
                              toggleable: true, 
                              data-model-id: media.id, 
                              auto-rotate: true
                              }}
                            </div>
                          </div>
                          {% else %}
                          <div class="item">
                            <div class="product-single__media 4" data-media-id="{{ media.id }}">
                              {{ media | media_tag }}
                            </div>
                          </div>
                      {% endcase %}
                      {% endfor %}
                    </div>
                    {% render 'product-label' with product as product, badge_detail: true %}
                </div>
            </div>

            <div class="col-md-6 product-shop">
                <h2 class="product-title">
                    {% render 'multilang' with product.title %}
                </h2>

              {% if section.settings.display_product_reviews or settings.qv_show_sold_in %}
              <div class="group_item">
                
                {% if settings.embed_code_review != blank %}
                  {{settings.embed_code_review}}
                {% else %}
                  <span class="shopify-product-reviews-badge" data-id="{{ product.id }}"></span>
                {% endif %}
                
                {% if settings.qv_show_sold_in and product.available %}
                    <div data-soldOut-product class="sold_product" data-items="{{ settings.qv_item_prd }}" data-hours="{{ settings.qv_hours_prs }}">
                        <span class="items-count">2</span>
                        {% render 'multilang' with settings.qv_item_prds %}
                        <span class="hours-num">8</span>
                        {% render 'multilang' with settings.qv_item_hours %}
                    </div>
                {% endif %}
              </div>
              {% endif %}

              {% if settings.display_quickview_vendor or settings.display_quickview_product_sku or settings.display_quickview_availability %}
                <div class="product-infor">
                    {% if settings.display_quickview_vendor %}
                        <div class="vendor-product">
                            {% if settings.quickview_text_vendor != blank %}
                               <label>
                                {{ settings.quickview_text_vendor  }}
                                </label>
                            {% endif %}
                            <span>{{ product.vendor | link_to_vendor }}</span>
                        </div>
                        {% endif %}

                        {% if settings.display_quickview_product_sku %}
                        <div class="sku-product">
                            {% if settings.text_quickview_product_sku != blank %}
                                <label>
                                    {{ settings.text_quickview_product_sku | split: '|' | first }}
                                </label>
                            {% endif %}
                            <span>{{ current_variant.sku }}</span>
                        </div>
                        {% endif %}

                        {% if settings.display_quickview_availability %}
                        <div class="product-inventory">
                            {% if settings.quickview_text_availability != blank %}
                                <label>
                                    {{ settings.quickview_text_availability | split: '|' | first }}
                                </label>
                            {% endif %}
                            <span>
                            {% if current_variant.inventory_management %}
                            {% assign first_inventory = current_variant.inventory_quantity %}
                            {% if first_inventory > 0 %}
                            {{ 'products.product.in_stock' | t }}
                            {% else %}
                            {{ 'products.product.out_of_stock' | t }}
                            {% endif %}
                            {% else %}
                            {{ 'products.product.many_in_stock' | t }}
                            {% endif %}
                            </span>
                        </div>
                        {% endif %}
                    </div>
                {% endif %}


                {% if section.settings.display_vendor  or section.settings.display_product_sku or section.settings.display_product_type %}
                <div class="product-infor">
                    {% if section.settings.display_vendor %}
                    <div class="vendor-product">
                        {% if section.settings.text_vendor != blank %}
                        {% if settings.enable_multilang %}
                        <label class="lang1">
                            {{ section.settings.text_vendor | split: '|' | first }}
                        </label>
                        <label class="lang2">
                            {{ section.settings.text_vendor | split: '|' | last }}
                        </label>
                        {% else %}
                        <label>
                            {{ section.settings.text_vendor | split: '|' | first }}
                        </label>
                        {% endif %}
                        {% endif %}
                        <span>{{ product.vendor | link_to_vendor }}</span>
                    </div>
                    {% endif %}

                    {% if section.settings.display_product_sku %}
                    <div class="sku-product">
                        {% if section.settings.text_product_sku != blank %}
                        {% if settings.enable_multilang %}
                        <label class="lang1">
                            {{ section.settings.text_product_sku | split: '|' | first }}
                        </label>
                        <label class="lang2">
                            {{ section.settings.text_product_sku | split: '|' | last }}
                        </label>
                        {% else %}
                        <label>
                            {{ section.settings.text_product_sku | split: '|' | first }}
                        </label>
                        {% endif %}
                        {% endif %}
                        <span>{{ current_variant.sku }}</span>
                    </div>
                    {% endif %}

                    {% if section.settings.display_product_type %}
                    <div class="product-type">
                        {% if section.settings.text_product_type != blank %}
                        {% if settings.enable_multilang %}
                        <label class="lang1">
                            {{ section.settings.text_product_type | split: '|' | first }}
                        </label>
                        <label class="lang2">
                            {{ section.settings.text_product_type | split: '|' | last }}
                        </label>
                        {% else %}
                        <label>
                            {{ section.settings.text_product_type | split: '|' | first }}
                        </label>
                        {% endif %}
                        {% endif %}
                        <span>{{ product.type }}</span>
                    </div>
                    {% endif %}
                </div>
                {% endif %}

                

                

                {% if section.settings.show_desc == 'short' %}
                    {% if product.metafields.c_f['Short Description'] %}
                    {% assign des = product.metafields.c_f['Short Description'] %}
                    {% assign word_numbeer = 100000000000000 %}
                {% else %}
                    {% assign des = product.description %}
                    {% assign word_numbeer = 18 %}
                {% endif %}

                
                <div class="rte short-description">
                    {{ des | strip_html | replace: '&nbsp;', ' ' | truncatewords: word_numbeer }}
                </div>

                {% elsif section.settings.show_desc == 'full' %}
                    {% assign des = product.description %}
                    <div class="rte short-description">
                        {{ des | strip_html | replace: '&nbsp;', ' ' }}
                    </div>
                {% endif %}

                {% if settings.display_product_countdown %}
                    {% if settings.option_countdown == 'all_product' %}
                        <div class="countdown">
                          {% render 'multilang' with settings.text_countdown %}
                          <div class="countdown-item" data-countdown-normal data-countdown-value="{{ settings.count_down_timer }}"></div>
                        </div>
                    {% else %}
                        {% if product.metafields.c_f['countdown'] %}
                        {% capture countdown %}{{ product.metafields.c_f['countdown'] }}{% endcapture %}
                            {% if section.settings.display_product_countdown %}
                            <div class="countdown">
                              {% render 'multilang' with settings.text_countdown %}
                              <div class="countdown-item" data-countdown-normal data-countdown-value="{{ countdown }}"></div>
                            </div>
                            {% endif %}
                        {% endif %}
                    {% endif %}
                {% endif %}


              <div class="prices">
                  {% if product.compare_at_price > product.price %}
                  <span class="compare-price">
                    {{ product.compare_at_price_max | money }}
                  </span>
                  <span class="price on-sale" itemprop="price">
                    {{ product.price | money }}
                  </span>
                  {% else %}
                  <span class="price" itemprop="price">
                    {{ product.price | money }}
                  </span>
                  {% endif %}
                  <input type="hidden" id="product_regular_price" name="product_regular_price" value="{{ product.price }}">
                </div>

                {% form 'product', product, id: "add-to-cart-form", novalidate: 'novalidate' %}

                {% if settings.display_size_chart %}
                <a data-toggle="modal" data-target="#size_chart" class=" {% if variantCount > 1 and  product.variants[0].title != 'Default Title'  %} show-variant {% else %} no-variant {% endif %} size-chart-open-popup">
                  <span>{{settings.size_guide_text }}</span>
                </a>
                {% endif %}

                {% if product.available %}
                <div id="product-variants">
                    {% if variantCount > 1 and  product.variants[0].title != 'Default Title'  %}
                    <select id="product-selectors" name="id" style="display: none;">
                        {% for variant in product.variants %}
                        {% if variant.available %}
                        <option data-imge="{% if variant.image.size != blank %}{{ variant.image.src | product_img_url: 'compact' }}{% else  %}{{ product.featured_image.src | product_img_url: 'compact' }}{% endif %}" {% if variant == current_variant %} selected="selected" {% endif %} value="{{ variant.id }}">
                            {{ variant.title }}
                        </option>
                        {% else %}
                        <option disabled="disabled">{{ variant.title }} - {{ 'products.product.sold_out' | t }}</option>
                        {% endif %}
                        {% endfor %}
                    </select>

                    {% if settings.use_color_swatch %}
                    {% for option in product.options %}
                    {% render 'swatch' with option %}
                    {% endfor %}
                    {% endif %}

                    {% else %}
                    <input type="hidden" name="id" value="{{ product.variants[0].id }}" />
                    {% endif %}
                </div>
                {% endif %}
                <div class="groups-btn">
                  {% if current_variant.available %}
                  <div class="quantity">
                    <label for="quantity" {% if settings.enable_multilang %}data-translate="cart.label.quantity"{%endif%}>
                      {{ 'cart.label.quantity' | t }}:
                    </label>
                    <div class="qty-group">
                      <a href="#" data-minus-qtt class="minus button"></a>
                      <input type="text" data-qtt-id="quantity__{{ product.id }}" name="quantity" value="1">
                      <a href="#" data-plus-qtt class="plus button"></a>
                    </div>
                  </div>
                  {% endif %}
                  <div class="atc-btn">

                    {% if current_variant.available %}
                        {% assign first_inventory = current_variant.inventory_quantity %}
                        {% if first_inventory > 0 %}
                            <input data-btn-addToCart type="submit" name="add" class="btn btn-x1" {% if settings.enable_multilang %}data-translate="products.product.add_to_cart"{%endif%} id="product-add-to-cart" value="{{ 'products.product.add_to_cart' | t }}" data-form-id="#add-to-cart-form">
                        {% else %}
                            <input data-btn-addToCart type="submit" name="add" class="btn btn-x1" {% if settings.enable_multilang %}data-translate="products.product.add_to_cart"{%endif%} id="product-add-to-cart" value="{{ 'products.product.pre_order' | t }}" data-form-id="#add-to-cart-form">
                        {% endif %}
                    {% else %}
                    <input type="submit" name="add" class="btn" {% if settings.enable_multilang %}data-translate="products.product.unavailable"{%endif%} id="product-add-to-cart" disabled value="{{ 'products.product.unavailable' | t }}" >
                    {% endif %}
                  </div>
                  {% render 'wishlist-product' with product as product %}
                </div>
                {% if section.settings.enable_condition_checkbox  %}
                    <div class="terms_conditions_checkout">
                      {% if section.settings.enable_terms_and_conditions %}
                      <div class="terms_conditions">
                        <input class="conditions" type="checkbox" name="conditions">
                        <label>
                          {% render 'multilang' with section.settings.terms_and_conditions_text %}
                        </label>
                      </div>
                      {% endif %}
                      <div class="btn-checkout  {% if section.settings.enable_terms_and_conditions %} disagree_conditions{% endif %}">
                        {{ form | payment_button }}
                      </div>
                    </div>
                {% endif %}

                {% endform %}
                {% if settings.dpl_customers_view_qv %}
                    <div id="customers_view_qv" class="customers_view" data-customer-view="{{ settings.number_view_qv }}">
                        <i class="fa fa-eye" aria-hidden="true"></i>
                        <label>283</label> {% render 'multilang' with settings.title_view_qv %}
                    </div>
                    {% endif %}
                    
                  {% if section.settings.display_trust_img and section.settings.img_trust != blank %}
                  <div class="secure-shopping-guarantee">
                    <img src="{{ section.settings.img_trust | img_url: '800x'  }}">
                  </div>
                {% endif %}
                {% comment %}{% render 'tab-vertical' %}{% endcomment %}

            </div>
        </div>

    </div>
</div>

{{ 'option_selection.js' | shopify_asset_url | script_tag }}

{% unless product == empty %}
<script nomodule src="https://unpkg.com/@google/model-viewer/dist/model-viewer-legacy.js"></script>
<script>
  var buttonSlt = '[data-minus-qtt], [data-plus-qtt]',
      buttonElm = $(buttonSlt);

  $(document).on('click', buttonSlt, function(e) {
      e.preventDefault();
      e.stopPropagation();

      var self = $(this),
          input = $('.quantity input[name="quantity"]'),
          oldVal = parseInt(input.val()),
          newVal = 1;

      switch (true) {
          case (self.hasClass('plus')): {
              newVal = oldVal + 1;
              break;
          }
          case (self.hasClass('minus') && oldVal > 1): {
              newVal = oldVal - 1;
              break;
          }
      }

      input.val(newVal).trigger('change');


  });
    {% if section.settings.display_subtotal and product.available %}
    $('[data-qtt-id]').on('change', updatePricing);
    function updatePricing() {
      var quantity = parseInt($('[data-qtt-id]').val());
      var p = $('.product #product_regular_price').val();
      var totalPrice1 = p * quantity;
      var g = Shopify.formatMoney(totalPrice1, window.money_format);
      $('.product .total-price span').html(g);

      {% if settings.enable_multiple_currencies %}
      Currency.convertAll(window.shop_currency, $('#currencies .active').attr('data-currency'), 'span.money', 'money_format');
      {% else %}
      {% if settings.enable_auto_currency %}
      Currency.convertAll(window.shop_currency, $('#currencies .active').attr('data-currency'), 'span.money', 'money_format');
      {% endif %}
      {% endif %}
        
    };
    {% endif %}

    var selectCallback = function(variant, selector) {
        var addToCartBtn = $('#product-add-to-cart'),
            productPrice = $('.product .price'),
            comparePrice = $('.product .compare-price'),
            productInventory = $('.product-inventory'),
            productSku = $('.product .sku-product'),
            labelSave = $('.product-photos .sale-label');

            var inven_array = {
              {% for variant in product.variants %}
              "{{variant.id}}":"{{variant.inventory_quantity}}",
              {%endfor%}
            };
            var inven_num = '';

        if(variant) {
        // addToCartbtn
            if (variant.available) {
            for( variant_id in inven_array){
              if(variant.id == variant_id ){
                inven_num = inven_array[variant_id];
                var inventoryQuantity = parseInt(inven_num);

              }

              if(inventoryQuantity > 0){
                // We have a valid product variant, so enable the submit button
                addToCartBtn.removeClass('disabled').removeAttr('disabled').val(window.inventory_text.add_to_cart);
              }else{
                if(variant.inventory_management != null){
                    addToCartBtn.removeClass('disabled').removeAttr('disabled').val(window.inventory_text.pre_order);
                }else{
                    addToCartBtn.removeClass('disabled').removeAttr('disabled').val(window.inventory_text.add_to_cart);
                    $(".product-template .terms_conditions_checkout").hide();
                }
              }
              
            }
          }
          else {
            addToCartBtn.val(window.inventory_text.sold_out).addClass('disabled').attr('disabled', 'disabled');
          };

        // Prices
            $('.product #product_regular_price').val(variant.price);
               productPrice.html(Shopify.formatMoney(variant.price, "{{ shop.money_format }}"));

            if(variant.compare_at_price > variant.price) {
                productPrice.addClass("on-sale");
                comparePrice
                    .html(Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}"))
                    .show();

               {% if  settings.type_label_sale == 'label_sale' %}
                    labelSave.html('sale').show();
               {% else %}
                    labelSave.html('-' + Math.floor((variant.compare_at_price - variant.price) * 100 / variant.compare_at_price) + '%').show();
               {% endif %}
            }
            else {
                comparePrice.hide();
                productPrice.removeClass("on-sale");
                labelSave.hide();
            };

            {% if section.settings.display_subtotal and product.available %}
            updatePricing();
            {% endif %}

            {% if settings.enable_multiple_currencies %}
                Currency.convertAll(window.shop_currency, $('#currencies .active').attr('data-currency'), 'span.money', 'money_format');
            {% endif %}

            // update variant inventory
            var inven_array = {
                {% for variant in product.variants %}
                    "{{variant.id}}":"{{variant.inventory_quantity}}",
                {% endfor %}
            };
            var inven_num = '';
            if (variant.available) {
                for (variant_id in inven_array) {
                    if (variant.id == variant_id) {
                        inven_num = inven_array[variant_id];
                        var inventory = inven_num.toString();
                    }
                }
            }
            {% if settings.display_quickview_availability %}
            if (variant.available) {
                if (variant.inventory_management != null) {
                    productInventory.find('span').text( inventory +" " +  window.inventory_text.in_stock);
                }
                else {
                    productInventory.find('span').text(window.inventory_text.many_in_stock);
                }
            }
            else {
                productInventory.find('span').text(window.inventory_text.out_of_stock);
            }
            {% endif %}

            var form = $('#' + selector.domIdPrefix).closest('form');

            for (var i=0,length=variant.options.length; i<length; i++) {
                var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');

                if (radioButton.size()) {
                    radioButton.get(0).checked = true;
                }
            };
        }
        else {
            addToCartBtn.val(window.inventory_text.sold_out).addClass('disabled').attr('disabled', 'disabled');
        };

         {% if settings.display_quickview_product_sku %}
        if (variant) {
            productSku.find('span').text(variant.sku);
        }
        else {
            productSku.find('span').empty();
        }
        {% endif %}

        

        /*begin variant image*/
        $(document).ready(function() {
          if (variant && variant.featured_image) {
            var originalImage = $("img[id|='product-featured-image']");
            var newImage = variant.featured_image;
            var element = originalImage[0];

            Shopify.Image.switchImage(newImage, element, function (newImageSizedSrc, newImage, element) {
              jQuery('.slider-nav img').each(function() {
                var grandSize = $(this).attr('src').split('?')[0].replace('compact','1024x1024');

                newImageSizedSrc = newImageSizedSrc.split('?')[0];

                if(grandSize === newImageSizedSrc) {
                  var item = $(this).closest('.item');

                  item.trigger('click');
                  return false;
                }
              });
            });
          };
        });
    };

    $(function($) {

        if($('#product-selectors').length > 0){
          new Shopify.OptionSelectors('product-selectors', {
              product: {{ product | json }},
              onVariantSelected: selectCallback,
              enableHistoryState: true
          });

        }



        Shopify.linkOptionSelectors({{ product | json }}, '.product');

        {% if product.options.size == 1 and product.options.first != 'Title' %}
        $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first }}</label>');
        {% elsif product.options.size > 1 %}
        $('.selector-wrapper').append('<span class="icon-dropdown"><i class="fa fa-angle-down"></i></span>');
        {% endif %}

        $('.product-shop .selector-wrapper label').append('<em>*</em>');

        {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
        $('.selector-wrapper').hide();
        {% endif %}

        {% if product.description contains '[countdown]' and section.settings.countdown == 'countdown_2' %}
        function randomIntFromInterval(min, max) {
        return Math.floor(Math.random() * (max - min + 1) + min);
        }

        var total_items = {{ section.settings.total_items }} || 60,
            min_items_left = {{ section.settings.min_items_left }} || 8,
            max_items_left = {{ section.settings.max_items_left }} || 30,
            rest_items = randomIntFromInterval(min_items_left, max_items_left),
            timer = null,
            timerInterval = null;

        function initProgressbar(rest_items) {
        var progressbar = $('.progressbar');
        var count = progressbar.find('.count');

        count.text(rest_items);
        updateMeter(rest_items);

        timer = setTimeout(function() {
            rest_items--;

            if (rest_items < 1) {
            rest_items = randomIntFromInterval(min_items_left, max_items_left)
            };

            count.text(rest_items);
            updateMeter(rest_items);
        }, 1000 * 60 * 0.17);

        timerInterval = setInterval(function() {
            rest_items--;

            if (rest_items < 1) {
            rest_items = randomIntFromInterval(min_items_left, max_items_left)
            }
            count.text(rest_items);
            updateMeter(rest_items)
        }, 1000 * 60 * 1.7)
        }


        function updateMeter(rest_items) {
        var percent = 100 * rest_items / total_items;

        if (rest_items >= min_items_left) {
            setTimeout(function() {
            $('#progressbar span').css('width', percent + '%');
            }, 300);
        }
        };

        initProgressbar(rest_items);
        {% endif %}
    });
</script>

{% if product.description contains '[countdown]' and section.settings.countdown == 'countdown_2' %}
<style>
    .product-shop .countdown-progressbar #progressbar {
        background-color: {{ section.settings.progressbar_color }};
    }

    .product-shop .countdown-progressbar #progressbar span {
        background-color: {{ section.settings.progressbar_active_color }};
    }
</style>
{% endif %}

{% endunless %}

{% schema %}
{
    "name": "Product Image",
    "class": "col-12 col-main",
    "settings": [
        {
            "type": "header",
            "content": "Product Moreview"
        },
        {
            "type": "radio",
            "id": "style_moreview",
            "label": "Product Morevie:",
            "options": [
                {
                    "value": "horizontal",
                    "label": "Horizontal Moreview"
                },
                {
                    "value": "vertical",
                    "label": " Vertical Moreview"
                }
                
            ],
            "default": "vertical"
        },
        {
            "type": "header",
            "content": "dynamic checkout button"
        },
        {
          "type": "checkbox",
          "id": "enable_terms_and_conditions",
          "label": "Show terms and conditions text",
          "default": true
        },
        {
            "type": "text",
            "id": "terms_and_conditions_text",
            "label": "Terms and conditions text",
            "default": "I agree with the terms and conditions"
          },
        {
            "type": "checkbox",
            "id": "enable_condition_checkbox",
            "label": "Show dynamic checkout button",
            "info": "Lets customers check out directly using a familiar payment method. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
            "default": true
        },
        {
            "type": "header",
            "content": "Image Trust"
        },
        {
            "type": "checkbox",
            "id": "display_trust_img",
            "label": "Display Trust Image?",
            "default": true
        },
        {
            "type": "image_picker",
            "id": "img_trust",
            "label": "Image Trust"
        },
        
        {
            "type": "header",
            "content": "Product Infor"
        },
        {
            "type": "radio",
            "id": "show_desc",
            "label": "Short description",
            "options": [
                {
                    "value": "no-show",
                    "label": "No"
                },
                {
                    "value": "short",
                    "label": "Yes"
                },
                {
                    "value": "full",
                    "label": "Show Full Description"
                }
            ],
            "default": "short"
        }
    ]
    
}
{% endschema %}
